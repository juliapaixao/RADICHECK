<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>br.com.radicheck</groupId>
  <artifactId>radicheck</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>radicheck Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>

    <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api-->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
        <!-- Provided: Significa que a dependência estará disponível para compilar e testar as classes, mas que é esperado que o JDK ou o container disponibilize-a, e por esse motivo a biblioteca não é adicionada ao artefato final quando geramos o pacote do nosso projeto. -->
        <!-- Runtime: Significa que a dependência não estará disponível para compilar. Estará disponível apenas no momento da execução e também no classpath dos testes. -->
        <scope>provided</scope>
      </dependency>

    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
    <!-- <version>1.4.8</version>
    Compile: Significa que a dependência estará em todos os classpaths: de compilação, teste e execução. Esse é o escopo padrão utilizado quando não declaramos um escopo na dependência.-->
     <scope>compile</scope>
   </dependency>

   <!-- https://mvnrepository.com/artifact/br.com.caelum.stella/caelum-stella-core -->
    <!-- Stella é uma bliblioteca da caelum que tem API para trabalhar com CPF, boleto, com várias coisas brasileiras...
      <dependency>
        <groupId>br.com.caelum.stella</groupId>
        <artifactId>caelum-stella-core</artifactId>
        <version>2.1.2</version>
        <scope>runtime</scope>
      </dependency> -->

    <!-- Inserindo um outro projeto, ambos serão interdependentes
    <dependency>
      <groupId>br.com.alura</groupId>
      <artifactId>produtos</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>-->
  </dependencies>

  <build>
    <finalName>radicheck</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>

        <!-- jetty: plugin para servidor local/tipo tomcat-->
        <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.4.3.v20170317</version>
           <!-- Reload do servlet -->
          <configuration>
            <scanIntervalSeconds>10</scanIntervalSeconds>
              <webApp>
                 <contextPath>/radicheck</contextPath>
              </webApp>
       </configuration>
     </plugin>

     <plugin>
       <artifactId>maven-clean-plugin</artifactId>
       <version>3.1.0</version>
     </plugin>
     <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
